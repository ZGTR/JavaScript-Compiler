/* Generated By:JavaCC: Do not edit this line. JSParserConstants.java */
package js_compiler;

public interface JSParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 6;
  int MULTI_LINE_COMMENT = 7;
  int ABSTRACT = 8;
  int BOOLEAN = 9;
  int BREAK = 10;
  int BYTE = 11;
  int CASE = 12;
  int CATCH = 13;
  int CHAR = 14;
  int CLASS = 15;
  int CONST = 16;
  int CONTINUE = 17;
  int _DEFAULT = 18;
  int DELETE = 19;
  int DO = 20;
  int DOUBLE = 21;
  int ELSE = 22;
  int EXTENDS = 23;
  int FIELD = 24;
  int FINAL = 25;
  int FINALLY = 26;
  int FLOAT = 27;
  int FOR = 28;
  int FUNCTION = 29;
  int GOTO = 30;
  int IF = 31;
  int IMPLEMENTS = 32;
  int IMPORT = 33;
  int IN = 34;
  int INSTANCEOF = 35;
  int INT = 36;
  int INTERFACE = 37;
  int LONG = 38;
  int NATIVE = 39;
  int NEW = 40;
  int PACKAGE = 41;
  int PRIVATE = 42;
  int PROTECTED = 43;
  int PUBLIC = 44;
  int RETURN = 45;
  int SHORT = 46;
  int STATIC = 47;
  int SUPER = 48;
  int SWITCH = 49;
  int SYNCHRONIZED = 50;
  int THIS = 51;
  int THROW = 52;
  int THROWS = 53;
  int TRY = 54;
  int TYPEOF = 55;
  int VAR = 56;
  int VOID = 57;
  int WHILE = 58;
  int WITH = 59;
  int LPAREN = 60;
  int RPAREN = 61;
  int LBRACE = 62;
  int RBRACE = 63;
  int LBRACKET = 64;
  int RBRACKET = 65;
  int SEMICOLON = 66;
  int COMMA = 67;
  int ASSIGN_ALL = 68;
  int GT = 69;
  int LT = 70;
  int LE = 71;
  int GE = 72;
  int RSIGNEDSHIFT = 73;
  int RUNSIGNEDSHIFT = 74;
  int PLUSASSIGN = 75;
  int MINUSASSIGN = 76;
  int STARASSIGN = 77;
  int SLASHASSIGN = 78;
  int RSIGNEDSHIFTASSIGN = 79;
  int RUNSIGNEDSHIFTASSIGN = 80;
  int BANG = 81;
  int TILDE = 82;
  int HOOK = 83;
  int COLON = 84;
  int DOT = 85;
  int EQ = 86;
  int NE = 87;
  int OR = 88;
  int AND = 89;
  int INCR = 90;
  int DECR = 91;
  int PLUS = 92;
  int MINUS = 93;
  int STAR = 94;
  int SLASH = 95;
  int BIT_AND = 96;
  int BIT_OR = 97;
  int XOR = 98;
  int REM = 99;
  int LSHIFT = 100;
  int SC_ORASSIGN = 101;
  int SC_ANDASSIGN = 102;
  int BIT_ANDASSIGN = 103;
  int BIT_ORASSIGN = 104;
  int XORASSIGN = 105;
  int REMASSIGN = 106;
  int LSHIFTASSIGN = 107;
  int ELEMENT = 108;
  int NUMBER = 109;
  int STOP = 110;
  int ESCAPE = 111;
  int OBJECT = 112;
  int STRING = 113;
  int String_S = 114;
  int NUMBERS = 115;
  int GET = 116;
  int SET = 117;
  int _FUNCTION = 118;
  int VALUEOF = 119;
  int PAGEYOFFSET = 120;
  int DEBUGGER = 121;
  int PARENT = 122;
  int INFINITY = 123;
  int PARSEFLOAT = 124;
  int PARSEINT = 125;
  int PASSWORD = 126;
  int INNERHEIGHT = 127;
  int INNERWIDTH = 128;
  int INTEGER_LITERAL = 129;
  int DECIMAL_LITERAL = 130;
  int HEX_LITERAL = 131;
  int OCTAL_LITERAL = 132;
  int FLOATING_POINT_LITERAL = 133;
  int EXPONENT = 134;
  int STRING_LITERAL = 135;
  int ESCAPE_SEQUENCE = 136;
  int BOOLEAN_LITERAL = 137;
  int NULL_LITERAL = 138;
  int IDENTIFIER = 139;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"abstract\"",
    "\"boolean\"",
    "\"break\"",
    "\"byte\"",
    "\"case\"",
    "\"catch\"",
    "\"char\"",
    "\"class\"",
    "\"const\"",
    "\"continue\"",
    "\"default\"",
    "\"delete\"",
    "\"do\"",
    "\"double\"",
    "\"else\"",
    "\"extends\"",
    "\"field\"",
    "\"final\"",
    "\"finally\"",
    "\"float\"",
    "\"for\"",
    "\"function\"",
    "\"goto\"",
    "\"if\"",
    "\"implements\"",
    "\"import\"",
    "\"in\"",
    "\"instanceof\"",
    "\"int\"",
    "\"interface\"",
    "\"long\"",
    "\"native\"",
    "\"new\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"return\"",
    "\"short\"",
    "\"static\"",
    "\"super\"",
    "\"switch\"",
    "\"synchronized\"",
    "\"this\"",
    "\"throw\"",
    "\"throws\"",
    "\"try\"",
    "\"typeof\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "\"with\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "<ASSIGN_ALL>",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\">>\"",
    "\">>>\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\">>= \"",
    "\">>>=\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\".\"",
    "\"==\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\"||=\"",
    "\"&&=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\"Element\"",
    "\"Number\"",
    "\"stop\"",
    "\"escape\"",
    "\"Object\"",
    "\"String\"",
    "<String_S>",
    "<NUMBERS>",
    "\"get\"",
    "\"set\"",
    "\"Function\"",
    "\"valueOf\"",
    "\"pageYoffset\"",
    "\"debugger\"",
    "\"parent\"",
    "\"Infinity\"",
    "\"parseFloat\"",
    "\"parseInt\"",
    "\"Password\"",
    "\"InnerHeight\"",
    "\"InnerWidth\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<ESCAPE_SEQUENCE>",
    "<BOOLEAN_LITERAL>",
    "\"null\"",
    "<IDENTIFIER>",
    "\"===\"",
    "\"!==\"",
    "\"=\"",
  };

}
